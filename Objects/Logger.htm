<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Logger.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Logger.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Wed Oct 23 16:47:47 2019
<BR><P>
<H3>Maximum Stack Usage =         32 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; goToSleep1 &rArr; disableSpi_0 &rArr; PinSPI_Off &rArr; PinMOSISCK_Off
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[29]">DMA_ADC0_Int_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[29]">DMA_ADC0_Int_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[16]">ADC0_Int_Handler</a> from main.o(i.ADC0_Int_Handler) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[17]">ADC1_Int_Handler</a> from main.o(i.ADC1_Int_Handler) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[29]">DMA_ADC0_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[2a]">DMA_ADC1_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[28]">DMA_DAC_Out_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[1f]">DMA_Err_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[27]">DMA_I2C0_MRX_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[26]">DMA_I2C0_MTX_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[25]">DMA_I2C0_SRX_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[24]">DMA_I2C0_STX_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[2b]">DMA_SINC2_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[21]">DMA_SPI1_RX_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[20]">DMA_SPI1_TX_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[23]">DMA_UART_RX_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[22]">DMA_UART_TX_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[b]">Ext_Int0_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[c]">Ext_Int1_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[d]">Ext_Int2_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[e]">Ext_Int3_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[f]">Ext_Int4_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[10]">Ext_Int5_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[11]">Ext_Int6_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[12]">Ext_Int7_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[19]">Flsh_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[14]">GP_Tmr0_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[15]">GP_Tmr1_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[1e]">I2C0_Master_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[1d]">I2C0_Slave_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[2d]">PWM0_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[2e]">PWM1_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[2f]">PWM2_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[2c]">PWMTRIP_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[18]">SINC2_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[1b]">SPI0_Int_Handler</a> from main.o(i.SPI0_Int_Handler) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[1c]">SPI1_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from main.o(i.SysTick_Handler) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[31]">SystemInitForLowPower</a> from system_aducm360.o(i.SystemInitForLowPower) referenced from startup_aducm360.o(.text)
 <LI><a href="#[1a]">UART_Int_Handler</a> from main.o(i.UART_Int_Handler) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[13]">WDog_Tmr_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[a]">WakeUp_Int_Handler</a> from main.o(i.WakeUp_Int_Handler) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[32]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_aducm360.o(.text)
 <LI><a href="#[30]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[32]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(.text)
</UL>
<P><STRONG><a name="[4e]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[33]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[35]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4f]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[50]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[51]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[52]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[53]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DMA_ADC0_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ADC0_Int_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ADC0_Int_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>DMA_ADC1_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMA_DAC_Out_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DMA_Err_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>DMA_I2C0_MRX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>DMA_I2C0_MTX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>DMA_I2C0_SRX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DMA_I2C0_STX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>DMA_SINC2_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>DMA_SPI1_RX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMA_SPI1_TX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>DMA_UART_RX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>DMA_UART_TX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>Ext_Int0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>Ext_Int1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>Ext_Int2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>Ext_Int3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>Ext_Int4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>Ext_Int5_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>Ext_Int6_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>Ext_Int7_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>Flsh_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>GP_Tmr0_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>GP_Tmr1_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>I2C0_Master_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C0_Slave_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>PWM0_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>PWM1_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>PWM2_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>PWMTRIP_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>SINC2_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SPI1_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>WDog_Tmr_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[54]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[16]"></a>ADC0_Int_Handler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, main.o(i.ADC0_Int_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC0_Int_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>ADC1_Int_Handler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, main.o(i.ADC1_Int_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC1_Int_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>PinAll_Init</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, pins.o(i.PinAll_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = PinAll_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinVpres_Init
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinSel_Init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinRTxD_Init
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinNC_Init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinMOSISCK_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinMISO_Init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinCntrlPer_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinCS_Init
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinCPUFET_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b]"></a>PinCPUFET_Init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, pins.o(i.PinCPUFET_Init))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinAll_Init
</UL>

<P><STRONG><a name="[3f]"></a>PinCS_Init</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, pins.o(i.PinCS_Init))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinCS_Off
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinAll_Init
</UL>

<P><STRONG><a name="[40]"></a>PinCS_Off</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, pins.o(i.PinCS_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = PinCS_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinCS_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinSPI_Off
</UL>

<P><STRONG><a name="[37]"></a>PinCntrlPer_Init</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, pins.o(i.PinCntrlPer_Init))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinAll_Init
</UL>

<P><STRONG><a name="[4a]"></a>PinCntrlPer_Off</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, pins.o(i.PinCntrlPer_Off))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goToSleep1
</UL>

<P><STRONG><a name="[3d]"></a>PinMISO_Init</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, pins.o(i.PinMISO_Init))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinMISO_Off
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinAll_Init
</UL>

<P><STRONG><a name="[41]"></a>PinMISO_Off</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, pins.o(i.PinMISO_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = PinMISO_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinMISO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinSPI_Off
</UL>

<P><STRONG><a name="[3e]"></a>PinMOSISCK_Init</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, pins.o(i.PinMOSISCK_Init))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinMOSISCK_Off
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinAll_Init
</UL>

<P><STRONG><a name="[42]"></a>PinMOSISCK_Off</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, pins.o(i.PinMOSISCK_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = PinMOSISCK_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinMOSISCK_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinSPI_Off
</UL>

<P><STRONG><a name="[38]"></a>PinNC_Init</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, pins.o(i.PinNC_Init))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinAll_Init
</UL>

<P><STRONG><a name="[3a]"></a>PinRTxD_Init</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, pins.o(i.PinRTxD_Init))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinAll_Init
</UL>

<P><STRONG><a name="[48]"></a>PinRTxD_Off</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, pins.o(i.PinRTxD_Off))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableUART
</UL>

<P><STRONG><a name="[43]"></a>PinSPI_Off</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, pins.o(i.PinSPI_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PinSPI_Off &rArr; PinMOSISCK_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinMOSISCK_Off
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinMISO_Off
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinCS_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableSpi_0
</UL>

<P><STRONG><a name="[39]"></a>PinSel_Init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, pins.o(i.PinSel_Init))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinSel_Off
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinAll_Init
</UL>

<P><STRONG><a name="[44]"></a>PinSel_Off</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, pins.o(i.PinSel_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = PinSel_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinSel_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableADC
</UL>

<P><STRONG><a name="[3c]"></a>PinVpres_Init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, pins.o(i.PinVpres_Init))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinAll_Init
</UL>

<P><STRONG><a name="[1b]"></a>SPI0_Int_Handler</STRONG> (Thumb, 206 bytes, Stack size 8 bytes, main.o(i.SPI0_Int_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI0_Int_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, main.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>SystemInitForLowPower</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, system_aducm360.o(i.SystemInitForLowPower))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(.text)
</UL>
<P><STRONG><a name="[1a]"></a>UART_Int_Handler</STRONG> (Thumb, 262 bytes, Stack size 12 bytes, main.o(i.UART_Int_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART_Int_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WakeUp_Int_Handler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, main.o(i.WakeUp_Int_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[56]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[57]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[45]"></a>disableADC</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, boardinit.o(i.disableADC))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = disableADC &rArr; PinSel_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinSel_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goToSleep1
</UL>

<P><STRONG><a name="[46]"></a>disableSpi_0</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, boardinit.o(i.disableSpi_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = disableSpi_0 &rArr; PinSPI_Off &rArr; PinMOSISCK_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinSPI_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goToSleep1
</UL>

<P><STRONG><a name="[47]"></a>disableUART</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, boardinit.o(i.disableUART))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = disableUART
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinRTxD_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goToSleep1
</UL>

<P><STRONG><a name="[49]"></a>goToSleep1</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, main.o(i.goToSleep1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = goToSleep1 &rArr; disableSpi_0 &rArr; PinSPI_Off &rArr; PinMOSISCK_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableUART
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableSpi_0
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableADC
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinCntrlPer_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>initCore</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, boardinit.o(i.initCore))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b]"></a>initRtcWakeUpTimer2</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, boardinit.o(i.initRtcWakeUpTimer2))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = initRtcWakeUpTimer2
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30]"></a>main</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = main &rArr; goToSleep1 &rArr; disableSpi_0 &rArr; PinSPI_Off &rArr; PinMOSISCK_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initRtcWakeUpTimer2
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCore
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinAll_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goToSleep1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[4c]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, boardinit.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initRtcWakeUpTimer2
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
